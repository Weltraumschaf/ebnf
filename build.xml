<?xml version="1.0" encoding="UTF-8"?>
<project name="PHP EBNF Image Generator" basedir="." default="main">
    <exec command="dirname '${phing.file}'" outputProperty="workspace"/>

    <property name="version" value="1.2.0"/>
    <property name="builddir" value="${workspace}/build" />
    <property name="srcdir" value="${workspace}/src/EBNF" />
    <property name="reportsdir" value="${workspace}/reports"/>
    <property name="docdir" value="${workspace}/doc"/>

    <fileset dir="${srcdir}" id="src">
        <include name="*.php"/>
        <include name="**/*.php/"/>
    </fileset>

    <fileset dir="${workspace}/tests" id="tests">
        <include name="*Test.php"/>
        <include name="**/*Test.php/"/>
    </fileset>

    <target name="clean" description="Cleans reports and doc folder">
        <delete dir="${reportsdir}" includeemptydirs="true" verbose="false"/>
        <delete dir="${docdir}" includeemptydirs="true" verbose="false"/>
        <delete dir="${builddir}" includeemptydirs="true" verbose="false"/>
    </target>

    <target name="prepare" depends="clean" description="Prepares report and doc folders">
        <mkdir dir="${reportsdir}"/>
        <mkdir dir="${builddir}"/>
        <echo file="${builddir}/host_os" append="false" message="${host.os}"/>
    </target>

    <!-- checkstyle -->
    <property name="phpcs.target" value="${srcdir}"/>
    <property name="phpcs.report.file.result" value="${reportsdir}/checkstyle.xml"/>
    <property name="phpcs.parameter" value="--standard='${workspace}/ruleset.xml' --extensions=php --ignore=include.php"/>

    <target name="checkstyle" depends="prepare" description="Runns codesniffer and generates a checkstyle xml file.">
        <!-- cli output -->
        <exec command="phpcs ${phpcs.parameter} '${phpcs.target}'" passthru="true"/>
        <!-- checkstyle report -->
        <exec command="phpcs --report=checkstyle ${phpcs.parameter} '${phpcs.target}' > '${phpcs.report.file.result}'"/>
    </target>

    <!-- test -->
    <property name="phpunit.tests.path" value="${workspace}/tests"/>
    <property name="phpunit.report.log" value="${reportsdir}/junit.xml"/>
    <property name="phpunit.report.coverage.html" value="${reportsdir}/coverage/"/>
    <property name="phpunit.report.coverage.log" value="${reportsdir}/coverage/clover.xml"/>

    <target name="test" depends="prepare" description="Runs unit tests and generates a junit xml file and coverage report.">
        <mkdir dir="${reportsdir}/coverage"/>
        <exec dir="${phpunit.tests.path}"
              command="phpunit --strict
                               --log-junit '${phpunit.report.log}'
                               --coverage-html '${phpunit.report.coverage.html}'
                               --coverage-clover '${phpunit.report.coverage.log}'"
              passthru="true"
              checkreturn="true"/>
    </target>

    <target name="doc" depends="prepare" description="Generates phpdoc.">
        <delete dir="${docdir}" includeemptydirs="true" verbose="false"/>
        <mkdir dir="${docdir}"/>

        <phpdoc title="${phing.project.name}"
                destdir="${docdir}"
                sourcecode="false"
                defaultpackagename="ebnf"
                defaultcategoryname="weltraumschaf"
                output="HTML:frames:default"
                ignoretags="@codeCoverageIgnore,@expectedException,@expectedExceptionMessage,@expectedExceptionCode">
            <fileset refid="src"/>
            <fileset refid="tests"/>
            <projdocfileset dir="${workspace}">
                <include name="README.md"/>
                <include name="CHANGELOG"/>
                <include name="LICENSE"/>
                <include name="TODO"/>
            </projdocfileset>
        </phpdoc>
    </target>

    <target name="pdepend" depends="prepare" description="PHP dependency analysis">
        <mkdir dir="${reportsdir}/phpdepend"/>
        <phpdepend>
            <fileset refid="src"/>
            <logger type="jdepend-xml" outfile="${reportsdir}/phpdepend/jdepend.xml"/>
            <logger type="jdepend-chart" outfile="${reportsdir}/phpdepend/jdepend.svg"/>
            <logger type="overview-pyramid" outfile="${reportsdir}/phpdepend/pyuramid.svg"/>
            <logger type="phpunit-xml" outfile="${reportsdir}/phpdepend/phpunit.xml"/>
            <logger type="summary-xml" outfile="${reportsdir}/phpdepend/summary.xml"/>
            <analyzer type="coderank-mode" value="method"/>
        </phpdepend>
    </target>

    <target name="pmd" description="PHP mess detection">
        <phpmd>
            <formatter type="xml" outfile="${reportsdir}/pmd.xml"/>
            <formatter type="html" outfile="${reportsdir}/pmd.html"/>
            <formatter type="text" usefile="false"/>
            <fileset refid="src"/>
        </phpmd>
    </target>

    <exec command="date +'%Y-%m-%d'" outputProperty="build.date"/>
    <exec command="date +'%T'" outputProperty="build.time"/>
    <target name="pear" depends="prepare, test, checkstyle">
        <mkdir dir="${builddir}/pear/EBNF"/>

        <copy todir="${builddir}/pear">
            <filterchain>
                <replacetokens begintoken="@@" endtoken="@@">
                    <token key="summary" value="${project.name}" />
                    <token key="version" value="${version}" />
                    <token key="date" value="${build.date}" />
                    <token key="time" value="${build.time}" />
                </replacetokens>
            </filterchain>
            <fileset dir="${workspace}">
                <include name="LICENSE"/>
                <include name="package.xml"/>
                <include name="README.md"/>
            </fileset>
        </copy>
        <copy todir="${builddir}/pear/EBNF">
            <filterchain>
                <replacetokens begintoken="@@" endtoken="@@">
                    <token key="version" value="${version}" />
                </replacetokens>
            </filterchain>
            <fileset refid="src"/>
        </copy>
        <copy file="${workspace}/bin/ebnf.php" tofile="${builddir}/pear/ebnf.php"/>
        <copy file="${workspace}/bin/ebnf.bat" tofile="${builddir}/pear/ebnf.bat"/>

        <exec command="pear package ${builddir}/pear/package.xml" dir="${builddir}/pear" passthru="true"/>

        <copy todir="${builddir}">
            <fileset dir="${builddir}/pear">
                <include name="*.tgz"/>
            </fileset>
        </copy>

        <delete dir="${builddir}/pear" includeemptydirs="true" verbose="false"/>
    </target>

    <target name="main" description="Runs tests, pmd, pdepend, checkstyle and doc." depends="test, checkstyle, pdepend, pmd, doc"/>
</project>