#!/usr/bin/env php
<?php

namespace Weltraumschaf\Ebnf;

use \Exception   as Exception;

require_once dirname(__DIR__) . "/src/Scanner.php";
require_once dirname(__DIR__) . "/src/Parser.php";
require_once dirname(__DIR__) . "/src/Renderer.php";

// input example
$input = <<<EOD
"EBNF defined in itself" {
  syntax     = [ title ] "{" { rule } "}" [ comment ].
  rule       = identifier "=" expression ( "." | ";" ) .
  expression = term { "|" term } .
  term       = factor { factor } .
  factor     = identifier
             | literal
             | "[" expression "]"
             | "(" expression ")"
             | "{" expression "}" .
  identifier = character { character } .
  title      = literal .
  comment    = literal .
  literal    = "'" character { character } "'"
             | '"' character { character } '"' .
}
EOD;

$usage = <<<EOD
Usage: ebnf [-s <file>] [-f png|jpg|gif|xml] [-h]

  -s <file> File with EBNF grammar. If omitted the example gramar is used.
  -f format Format for generated image (png, jpg, gif, xml). Default is png.
  -h        This help.

Example grammar:
{$input}\n\n
EOD;

$format  = "png";
$outfile = "";
$opts    = getopt("s:f:o:h");

if (isset($opts["h"])) {
    echo $usage;
    exit(0);
}

if (isset($opts["s"])) {
    $file = $opts["s"];

    if (!is_readable($file)) {
        echo "Can't read EBNF file '{$file}'!\n";
        exit(1);
    }

    $input = file_get_contents($file);

    if (false === $input || empty($input)) {
        echo "Can't read content from EBNF file '{$file}'!\n";
        exit(1);
    }
}

if (isset($opts["f"])) {
    $format = $opts["f"];
}

if (isset($opts["o"])) {
    $outfile = $opts["o"];
}

if (empty($outfile)) {
    echo "No output file specified (-o)!\n";
    echo $usage;
    exit(1);
}

try {
    $scanner = new Scanner($input);
    $parser  = new Parser($scanner);
    $dom     = $parser->parse();
    $renderer = new Renderer($format, $outfile, $dom);
    $renderer->save();
    exit(0);
} catch (Exception $e) {
    echo "Error: {$e->getMessage()}\n";
    exit(1);
} catch (SyntaxtException $e) {
    echo "Syntax Error: {$e}\n";
    exit(1);
}